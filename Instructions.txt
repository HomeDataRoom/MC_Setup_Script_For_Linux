This document will go over how to run the 'MC Setup Script For Linux' script 
=====================================================================================================================


If you downloaded the .zip file, unzip the content and go into the 'scripts' folder
Give the MinecraftSetup.sh file execute permissions
Then execute the script using './MinecraftSetup.sh' (make sure you're in the same folder as the script)

If you just downloaded the .sh file, give it execute permissions
Then execute the script using './MinecraftSetup.sh' (make sure you're in the same folder as the script)



You will be prompted to put in your administrative password, because you'll be updating your repos and packages, installing OpenJDK 19, and adding a directory for the Minecraft server in /opt. 
DO NOT RUN THIS AS ROOT!!!!! THAT IS A MAJOR SECURITY RISK!!!

1. Once your system is fully up to date and OpenJDK is installed, PaperMC 1.20.2 will be installed from the official PaperMC website
2. A minecraft directory will be made in '/opt'
3. The server will start, then it will stop because the EULA isn't agreed to
4. The EULA will be changed to 'true' and the server will start again
5. A simple start script will also be created at '/home/$USER/', called 'MC_Start.sh'
6. A systemd service will be created called 'minecraft.service' and it will use $USER (your user account) as the account to run the service
7. The systemd service will be enabled and started, you will be thrown into screen (the Minecraft console) after everything is finished.

##################################################
               After Installation
##################################################

If your server/computer turns off, the Minecraft 
server does not automatically turn back on when you
turn back on the server/computer; you will have to 
turn it back on yourself. This is why I made 
a simple start script at /MC_Start.sh. 

Run this:
"sudo systemctl start minecraft.service"


To check if the service (the Minecraft server) is running run:
"sudo systemctl status minecraft.service"

and look for: 'Active: active (running)'


To stop the service (the Minecraft server), run:
"sudo systemctl stop minecraft.service"


If you exit the SSH connection and come back and don't have access to the Minecraft console, run (if the service is running):
"screen -r"

